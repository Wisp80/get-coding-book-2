const game = {
    tickTimeout: null,
    tickRate: 1000 / 60,
    ticks: 0,
    worldSpeed: 16, // –°–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –º–∏—Ä–∞.
    maxWorldSpeed: 100,
    highestFloor: canvas.height / 2, /*–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —Ç–∞–π–ª–∞.*/
    autoScroll: true, // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –º–∏—Ä –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.
    tilesPassed: 0,
    distanceTravelled: 0,
    tempWallID: 2, // ID –¥–ª—è —Å—Ç–µ–Ω –ø—Ä–∏ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏–∏.

    wallWidth: 950, // –®–∏—Ä–∏–Ω–∞ —Å—Ç–µ–Ω.
    maximumWallHeight: canvas.height / 2, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—Ç–µ–Ω—ã.
    minimumWallHeight: 50, // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—Ç–µ–Ω—ã.
    maximumWallAtOneTIme: 5, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–µ–Ω, –æ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –º–æ–∂–µ–º –∏–º–µ—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.
    playerHeightMultiplayer: 2, /*–ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤—ã—Å–æ—Ç—ã –∏–≥—Ä–æ–∫–∞, –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –∫–∞–∫—É—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –º–æ–∂–µ—Ç –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –∏–≥—Ä–æ–∫ c —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã.*/
    differnceBetweenCurrentLastWallAndNewWall: 100, /*–ß–∏—Å–ª–æ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç–µ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤—ã—à–µ —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã.*/
    newWallLowHeightEnhancer: 60, /*–ß–∏—Å–ª–æ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –Ω–∞–¥–æ —É–≤–µ–ª–∏—á–∏—Ç—å –≤—ã—Å–æ—Ç—É —Å–ª–µ–¥—É—é—â–µ —Å—Ç–µ–Ω—ã, 
    –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∏–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–µ–∂–¥—É —ç—Ç–æ–π —Å—Ç–µ–Ω—ã –∏ –ø—Ä–µ–¥—ã–¥—É–¥—â–µ–π —Ç–µ–∫—É—â–µ–π —Å—Ç–µ–Ω–æ–π.*/


    stopWorld: function () { // –ú–µ—Ç–æ–¥ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è, —á—Ç–æ –º–∏—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è.
        this.autoScroll = false;
    },

    tick: function () {
        window.clearTimeout(game.tickTimeout);
        if (players.playerOne.isActive) {
            game.prepareDataForNextTick();
            window.requestAnimationFrame(game.renderPreparedDataForNextTick);
            game.tickTimeout = window.setTimeout('game.tick()', game.tickRate);
        };
    },

    reset: function () {
        audio.pauseSound(audio.defaultBackgroundMusic);
        audio.playSound(audio.defaultBackgroundMusic);

        game.autoScroll = true;
        game.worldSpeed = 16;
        game.ticks = 0;
        game.tilesPassed = 0;
        game.distanceTravelled = 0;
        game.tempWallID = 2;

        players.playerOne.isActive = true;
        players.playerOne.currentSpeedX = 0;
        players.playerOne.currentSpeedY = 0;
        players.playerOne.x = 300;
        players.playerOne.y = 485;

        walls = [
            new Wall(
                0, 550,
                1200, 450,
                helper.getRandomColor(), helper.getRandomColor(),
                1, 2
            )
        ];
    },

    generateBackground: function () {
        let tempBackground = new Background('./src/images/background-two.png', backgrounds[backgrounds.length - 1].x + 800, 115);
        backgrounds.push(tempBackground);
    },

    prepareDataForNextTick: function () {
        if (this.ticks % 600 === 0) {
            this.generateBackground();
        };

        for (let i = 0; i < backgrounds.length; i++) {
            if (backgrounds[i].x + 800 < 0) {
                backgrounds.splice(i, 1);
            };
        };

        players.playerOne.checkIfPlayerIsInAPit();
        game.cleanOldTiles();
        game.addFutureWalls(
            this.maximumWallAtOneTIme,
            this.playerHeightMultiplayer,
            this.minimumWallHeight,
            this.differnceBetweenCurrentLastWallAndNewWall,
            this.newWallLowHeightEnhancer
        );
        players.playerOne.move();

        if (!players.playerOne.isActive) { // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–π, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –º–∏—Ä–∞.
            if (document.getElementsByClassName('sound-off-on-button')[0].innerHTML === 'üîä') {
                audio.playSound(audio.generateLoseSound());
            };
            audio.pauseSound(audio.defaultBackgroundMusic);
            game.stopWorld();
        };

        if (this.autoScroll) { // –ü–æ–∫–∞ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è –º–∏—Ä, –¥–≤–∏–≥–∞–µ–º —Å—Ç–µ–Ω—ã.
            for (let i = 0; i < walls.length; i++) {
                walls[i].move(game.worldSpeed);
            };

            for (let j = 0; j < backgrounds.length; j++) {
                backgrounds[j].move(1);
            };
        };

        this.calculateDistanceTravelled();
        this.ticks++;
    },

    addFutureWalls: function (
        maximumWallAtOneTIme,
        playerHeightMultiplayer,
        minimumWallHeight,
        differnceBetweenCurrentLastWallAndNewWall,
        newWallLowHeightEnhancer
    ) {
        if (walls.length >= maximumWallAtOneTIme) { /*–ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–∏–Ω–∏–º—É–º 4 —Å—Ç–µ–Ω, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º.*/
            return;
        };

        /*–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–∞–º–æ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω–µ –≤ –º–∞—Å—Å–∏–≤–µ –¥–ª—è —Å—Ç–µ–Ω.*/
        let currentLastWall = walls[walls.length - 1];

        /*–û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞ –∫–∞–∫—É—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –º–æ–∂–µ—Ç –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –∏–≥—Ä–æ–∫ c —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã.*/
        let biggestJumpableHeight = currentLastWall.height + (players.playerOne.accelerationY - players.playerOne.gravity) * playerHeightMultiplayer;

        /*–ï—Å–ª–∏ —Ç–∞–∫ –ø–æ–ª—É—á–∏–ª–æ—Å—å, —á—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–µ—Ç –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –∏–≥—Ä–æ–∫ c —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã –æ–∫–∞–∑–∞–ª–∞—Å—å –±–æ–ª—å—à–µ, 
        —á–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É —Å—Ç–µ–Ω—ã, —Ç–æ –º—ã –¥–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é 
        –º–æ–∂–µ—Ç –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –∏–≥—Ä–æ–∫ c —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã –±—ã–ª–∞ —Ä–∞–≤–Ω–∞ —ç—Ç–æ–º—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é, —á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —Å–æ–∑–¥–∞—Ç—å —Å—Ç–µ–Ω—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é
        –Ω–µ –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å.*/
        if (biggestJumpableHeight > this.maximumWallHeight) {
            biggestJumpableHeight = this.maximumWallHeight;
        };

        /*–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–µ–Ω—ã. –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –±—É–¥–µ—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤—ã—Å–æ—Ç—ã, –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π 
        –≤—ã—Å–æ—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –∑–∞–ø—Ä—ã–≥–Ω—É—Ç—å –∏–≥—Ä–æ–∫ c —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–µ–Ω—ã, –ø–ª—é—Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞.*/
        let newWallHeight = Math.floor(Math.random() * biggestJumpableHeight) + minimumWallHeight;

        /*–ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–µ–Ω–∞ –Ω–∏–∂–µ, —á–µ–º —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç–µ–Ω–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å, –∏ –∏—Ö —Ä–∞–∑–Ω–∏—Ü–∞ –ø–æ –≤—ã—Å–æ—Ç–µ –º–µ–Ω—å—à–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è,
        —Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å—á–∏—Ç–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–µ–Ω—ã.*/
        if (currentLastWall.height < newWallHeight && Math.abs(newWallHeight - currentLastWall.height) < differnceBetweenCurrentLastWallAndNewWall) {
            newWallHeight = newWallHeight + newWallLowHeightEnhancer;
        };

        /*–í—ã—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–µ–Ω—ã, —Ç–æ –µ—Å—Ç—å —Ç–∞–º, –≥–¥–µ –∫–æ–Ω—á–∞–µ—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç–µ–Ω—ã.*/
        let newWallX = currentLastWall.x + currentLastWall.width;

        if (this.tilesPassed % Math.floor(5 * Math.random()) === 0) {
            let newWallShift = Math.floor(400 * Math.random());

            if (newWallShift <= 200) {
                newWallShift = 200;
            };

            newWallX += newWallShift;
        };

        /*–°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–∞–π–ª–∞.*/
        let newWall = new Wall(newWallX, canvas.height - newWallHeight, canvas.width - 600, newWallHeight, helper.getRandomColor(), helper.getRandomColor(), this.tempWallID, 2);
        walls.push(newWall); /*–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç–µ–Ω.*/

        this.tempWallID++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º ID –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–µ–Ω—ã. 
    },

    /*–ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ –≤–∏–¥–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.*/
    cleanOldTiles: function () {
        for (const i in walls) {
            /*–ú—ã –Ω–µ –≤–∏–¥–∏–º –∫–∞–∫–æ–π-–ª–∏–±–æ —Ç–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—à–µ–ª –∑–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –µ—Å—Ç—å –Ω–∞ 700 –ø–∏–∫—Å–µ–ª–µ–π –≤–ª–µ–≤–æ –æ—Ç 0. –≠—Ç–æ
            –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –µ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –∫–∞–∫ –º–∏–Ω–∏–º—É–º —Ä–∞–≤–Ω–∞ -700.*/
            if (walls[i].x <= -walls[i].width) {
                this.tilesPassed++;
                walls.splice(i, 1); /*–£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞–π–ª –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —Ç–∞–π–ª–∞–º.*/

                if (this.tilesPassed % 3 === 0 && this.worldSpeed < this.maxWorldSpeed) { /*–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –º–∏—Ä–∞
                –∫–∞–∂–¥—ã–µ 3 –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–∞–π–ª–∞.*/
                    this.worldSpeed++;
                };
            };
        };
    },

    calculateDistanceTravelled: function () {
        this.distanceTravelled += this.worldSpeed;
    },

    renderPreparedDataForNextTick: function () {
        ctx.fillStyle = '#00a8f3';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        for (let i = 0; i < backgrounds.length; i++) {
            backgrounds[i].drawBackground();
        };

        for (let i = 0; i < walls.length; i++) {
            walls[i].draw();
        };

        players.playerOne.draw();

        ctx.fillStyle = 'white';
        ctx.font = '35px Arial';
        ctx.fillText('–°–∫–æ—Ä–æ—Å—Ç—å: ' + game.worldSpeed, 10, 40); /*–í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –æ —Ç–µ–∫—É—â–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –º–∏—Ä–∞.*/
        ctx.fillText('–ü—Ä–æ–π–¥–µ–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ' + game.distanceTravelled, 10, 80); /*–í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –æ —Ç–æ–º, –∫–∞–∫–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ.*/
        ctx.fillText('–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–∞–π–ª–æ–≤: ' + game.tilesPassed, 10, 120); /*–í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –æ —Ç–æ–º, –∫–∞–∫–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±—ã–ª–æ –ø—Ä–æ–π–¥–µ–Ω–æ.*/

        ctx.strokeStyle = 'red';
        ctx.fillStyle = players.playerOne.color;
        ctx.strokeRect(550, 20, players.playerOne.maxJumpedDistance, 50);
        if (players.playerOne.currentAccelerationY !== 0) {
            ctx.fillRect(551, 21, players.playerOne.currentJumpedDistance, 48);
        } else {
            ctx.fillRect(551, 21, players.playerOne.maxJumpedDistance, 48);
        };
    },
};